var version='1.0.0';const{isArray}=Array,clone=(a)=>a.slice(0),join=(a)=>a.join(''),map=(a,b)=>b.map(a),filter=(a,b)=>b.filter(a),concat=(a,...b)=>a.concat(...b),toStringCub=(a)=>null==a?'':a.ROARS?a._buildElementString():a,mapCubsToString=(a)=>map(toStringCub,a);class Lion{constructor(a,b,d){this.tagName=a,this.attr=b||{},this.cubs=d||[]}get ROARS(){return!0}set cubs(a){if(isArray(a))this._cubs=a;else throw new TypeError('Lion wants cub[]')}get cubs(){return clone(this._cubs)}set attributes(a){this.attr=a}get attributes(){return this.attr}setCubs(a){return this.cubs=a,this}getCubs(){return this.cubs}setAttributes(a){return this.attributes=a,this}getAttributes(){return this.attributes}_buildAttributeString(){const a=this.attr,b=Object.keys(a);return 0<b.length?join(map((d)=>` ${d}="${a[d]}"`,b)):''}_buildContentString(){return join(mapCubsToString(this._cubs))}_buildElementString(){const a=this,b=a.tagName,d=a._buildAttributeString();if(a.hasCubs()){const e=a._buildContentString();return`<${b}${d}>${e}</${b}>`}return`<${b}${d}/>`}addAttribute(a,b){const d=this;return d.attr[a]=b,d}removeAttribute(a){const b=this;return b.attr[a]&&delete b.attr[a],b}addAttributes(a){const b=this,d=Object.keys(a);return map((e)=>b.addAttribute(e,a[e]),d),b}addCub(a){const b=this;return b._cubs.push(a),b}removeCub(a){let b=this,d=b._cubs.indexOf(a);return 0<=d&&(b.cubs=filter((e,f)=>f!==d,b.cubs)),b}addCubs(a){return isArray(a)&&(this.cubs=concat(this.cubs,a)),this}removeAllCubs(){return this._cubs=[],this}hasCubs(){return this._cubs&&0<this._cubs.length}value(){return this._buildElementString()}}const xmlion=(a,b,d)=>new Lion(a,b,d);export{Lion,xmlion,version};
